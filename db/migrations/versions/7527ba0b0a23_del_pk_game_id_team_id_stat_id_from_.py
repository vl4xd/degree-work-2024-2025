"""del pk game_id team_id stat_id from game_stat 2

Revision ID: 7527ba0b0a23
Revises: 7cfda69bbb39
Create Date: 2025-04-28 19:20:09.248005

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7527ba0b0a23'
down_revision: Union[str, None] = '7cfda69bbb39'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Удаляем старый составной первичный ключ
    op.drop_constraint('game_stat_pkey', 'game_stat', type_='primary')
    
    # 2. Создаем последовательность
    op.execute(sa.schema.CreateSequence(sa.Sequence('game_stat_id_seq')))
    
    # 3. Привязываем последовательность к столбцу
    op.execute(
        """
        ALTER TABLE game_stat 
        ALTER COLUMN game_stat_id 
        SET DEFAULT nextval('game_stat_id_seq'::regclass)
        """
    )
    
    # Создаем новый автоинкрементный PK
    op.create_primary_key(
        'game_stat_pkey',
        'game_stat',
        ['game_stat_id']
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # 1. Удаляем PK
    op.drop_constraint('game_stat_pkey', 'game_stat', type_='primary')
    
    # 2. Удаляем автоинкремент
    op.execute("ALTER TABLE game_stat ALTER COLUMN game_stat_id DROP DEFAULT")
    op.execute("DROP SEQUENCE IF EXISTS game_stat_id_seq")
    
    # 3. Восстанавливаем старый PK
    op.create_primary_key(
        'game_stat_pkey',
        'game_stat',
        ['game_id', 'team_id', 'stat_id']
    )
    # ### end Alembic commands ###
