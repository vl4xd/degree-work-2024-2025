"""init

Revision ID: dd0ed69883f8
Revises: 
Create Date: 2025-04-26 15:00:07.808279

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dd0ed69883f8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('amplua',
    sa.Column('amplua_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('amplua_id')
    )
    op.create_table('coach',
    sa.Column('coach_id', sa.String(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('coach_id')
    )
    op.create_table('game_status',
    sa.Column('game_status_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('game_status_id')
    )
    op.create_table('goal_type',
    sa.Column('goal_type_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('goal_type_id')
    )
    op.create_table('penalty_type',
    sa.Column('penalty_type_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('penalty_type_id')
    )
    op.create_table('player',
    sa.Column('player_id', sa.String(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('player_id')
    )
    op.create_table('referee',
    sa.Column('referee_id', sa.String(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('referee_id')
    )
    op.create_table('season',
    sa.Column('season_id', sa.String(), autoincrement=False, nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('season_id')
    )
    op.create_table('stat',
    sa.Column('stat_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('stat_id')
    )
    op.create_table('team',
    sa.Column('team_id', sa.String(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('team_id')
    )
    op.create_table('game',
    sa.Column('game_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('season_game_id', sa.String(), nullable=False),
    sa.Column('season_id', sa.String(), nullable=False),
    sa.Column('left_team_id', sa.String(), nullable=False),
    sa.Column('right_team_id', sa.String(), nullable=False),
    sa.Column('game_status_id', sa.Integer(), nullable=False),
    sa.Column('tour_number', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('min', sa.Integer(), nullable=True),
    sa.Column('plus_min', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['game_status_id'], ['game_status.game_status_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['left_team_id'], ['team.team_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['right_team_id'], ['team.team_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['season_id'], ['season.season_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('game_id'),
    sa.UniqueConstraint('season_game_id', 'season_id', name='unique_season_game_id_season_id')
    )
    op.create_table('player_stat',
    sa.Column('player_stat_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('player_id', sa.String(), nullable=False),
    sa.Column('amplua_id', sa.Integer(), nullable=False),
    sa.Column('season_id', sa.String(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('growth', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('transfer_value', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['amplua_id'], ['amplua.amplua_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['player_id'], ['player.player_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['season_id'], ['season.season_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('player_stat_id')
    )
    op.create_table('season_team',
    sa.Column('season_id', sa.String(), nullable=False),
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('season_team_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['season_id'], ['season.season_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['team.team_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('season_id', 'team_id')
    )
    op.create_table('team_coach',
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('season_id', sa.String(), nullable=False),
    sa.Column('coach_id', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['coach_id'], ['coach.coach_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['season_id'], ['season.season_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['team.team_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('team_id', 'season_id', 'coach_id')
    )
    op.create_table('team_player',
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('season_id', sa.String(), nullable=False),
    sa.Column('player_id', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['player.player_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['season_id'], ['season.season_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['team.team_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('team_id', 'season_id', 'player_id')
    )
    op.create_table('game_stat',
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('stat_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('min', sa.Integer(), nullable=True),
    sa.Column('plus_min', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['game.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['stat_id'], ['stat.stat_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['team.team_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('game_id', 'team_id', 'stat_id')
    )
    op.create_table('goal',
    sa.Column('goal_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('player_id', sa.String(), nullable=False),
    sa.Column('player_sub_id', sa.String(), nullable=True),
    sa.Column('goal_type_id', sa.Integer(), nullable=False),
    sa.Column('min', sa.Integer(), nullable=True),
    sa.Column('plus_min', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['game.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['goal_type_id'], ['goal_type.goal_type_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['player_id'], ['player.player_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['player_sub_id'], ['player.player_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['team.team_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('goal_id')
    )
    op.create_table('lineup',
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('player_id', sa.String(), nullable=False),
    sa.Column('min_in', sa.Integer(), nullable=True),
    sa.Column('plus_min_in', sa.Integer(), nullable=True),
    sa.Column('min_out', sa.Integer(), nullable=True),
    sa.Column('plus_min_out', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['game.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['player_id'], ['player.player_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['team.team_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('game_id', 'team_id', 'player_id')
    )
    op.create_table('penalty',
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('player_id', sa.String(), nullable=False),
    sa.Column('penalty_type_id', sa.Integer(), nullable=False),
    sa.Column('min', sa.Integer(), nullable=True),
    sa.Column('plus_min', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['game.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['penalty_type_id'], ['penalty_type.penalty_type_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['player_id'], ['player.player_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['team.team_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('game_id', 'team_id', 'player_id', 'penalty_type_id')
    )
    op.create_table('referee_game',
    sa.Column('referee_id', sa.String(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['game.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['referee_id'], ['referee.referee_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('referee_id', 'game_id')
    )
    op.create_table('save',
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.String(), nullable=False),
    sa.Column('player_id', sa.String(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['game.game_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['player_id'], ['player.player_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['team.team_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('game_id', 'team_id', 'player_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('save')
    op.drop_table('referee_game')
    op.drop_table('penalty')
    op.drop_table('lineup')
    op.drop_table('goal')
    op.drop_table('game_stat')
    op.drop_table('team_player')
    op.drop_table('team_coach')
    op.drop_table('season_team')
    op.drop_table('player_stat')
    op.drop_table('game')
    op.drop_table('team')
    op.drop_table('stat')
    op.drop_table('season')
    op.drop_table('referee')
    op.drop_table('player')
    op.drop_table('penalty_type')
    op.drop_table('goal_type')
    op.drop_table('game_status')
    op.drop_table('coach')
    op.drop_table('amplua')
    # ### end Alembic commands ###
